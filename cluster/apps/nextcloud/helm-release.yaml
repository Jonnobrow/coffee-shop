---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 5m
  releaseName: nextcloud
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm
      chart: nextcloud
      version: 2.11.3
      sourceRef:
        name: nextcloud
        kind: HelmRepository
        namespace: flux-system
  values:
    image:
      repository: nextcloud
      tag: 22.2.3-fpm-alpine
    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-ips@kubernetescrd,networking-nextcloud@kubernetescrd"
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "lab.${SECRET_DOMAIN}"
      hosts:
        - host: "nc.${SECRET_DOMAIN}"
          paths:
            - path: "/"
              pathType: Prefix
      tls:
        - hosts:
            - "nc.${SECRET_DOMAIN}"
    nextcloud:
      username: "${SECRET_NEXTCLOUD_USERNAME}"
      password: "${SECRET_NEXTCLOUD_PASSWORD}"
      host: "nc.${SECRET_DOMAIN}"
      extraVolumes:
        - name: photos
          persistentVolumeClaim:
            claimName: nextcloud-photos-pvc
            readOnly: false
        - name: scans
          persistentVolumeClaim:
            claimName: nextcloud-scans-pvc
            readOnly: false
      extraVolumeMounts:
        - name: photos
          mountPath: "/mnt/photos"
        - name: scans
          mountPath: "/mnt/scans"
      securityContext:
        supplementalGroups:
          - 1310
        runAsUser: 82
        runAsGroup: 82
        runAsNonRoot: true
      mail:
        enabled: true
        fromAddress: "${SECRET_NEXTCLOUD_MAIL_FROM}"
        domain: "${SECRET_DOMAIN}"
        smtp:
          authtype: PLAIN
          host: "${SECRET_SMTP_HOST}"
          port: "${SECRET_NEXTCLOUD_MAIL_PORT}"
          secure: "ssl"
          name: "${SECRET_SMTP_USERNAME}"
          password: "${SECRET_SMTP_PASSWORD}"
      phpConfigs:
        www.conf: |-
          [www]
          user = www-data
          group = www-data
          listen = 127.0.0.1:9000
          pm = dynamic
          pm.max_children = 70
          pm.start_servers = 20
          pm.min_spare_servers = 20
          pm.max_spare_servers = 35
          pm.max_requests = 500
      configs:
        other.config.php: |-
          <?php
          $CONFIG = array(
            'default_language' => 'en',
            'default_locale' => 'en_GB',
            'default_phone_region' => 'GB',
            'trusted_proxies' => array(
              0 => '192.168.6.1'
            ),
            'overwritehost' => 'nc.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
            'overwrite.cli.url' => 'https://nc.${SECRET_DOMAIN}'
          );
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.21.3-alpine
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: nextcloud-postgresql.nextcloud.svc.cluster.local
      password: "${SECRET_NEXTCLOUD_POSTGRES_PASSWORD}"
    postgresql:
      enabled: true
      postgresqlUsername: nextcloud
      postgresqlPassword: "${SECRET_NEXTCLOUD_POSTGRES_PASSWORD}"
      postgresqlDatabase: nextcloud
      persistence:
        enabled: true
        storageClassName: local-path
        accessMode: ReadWriteOnce
      image:
        repository: bitnami/postgresql
        tag: 13.5.0
      volumePermissions:
        enabled: true
      psp:
        create: true
      rbac:
        create: true
      resources:
        requests:
          memory: 1024Mi
          cpu: 1000m
        limits:
          memory: 1024Mi
          cpu: 1000m
    redis:
      enabled: true
      usePassword: true
      password: "${SECRET_NEXTCLOUD_REDIS_PASSWORD}"
    persistence:
      enabled: true
      existingClaim: nextcloud-data-pvc
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: true
    lifecycle:
      postStartCommand: ["/bin/sh", "-c", "crond"]
    resources:
      requests:
        memory: 1024Mi
        cpu: 500m
      limits:
        memory: 2048Mi
